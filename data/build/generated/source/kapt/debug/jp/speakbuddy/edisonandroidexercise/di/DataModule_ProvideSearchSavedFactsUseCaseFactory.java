// Generated by Dagger (https://dagger.dev).
package jp.speakbuddy.edisonandroidexercise.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import jp.speakbuddy.edisonandroidexercise.repository.repository.FactRepository;
import jp.speakbuddy.edisonandroidexercise.use_case.SearchSavedFactsUseCase;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class DataModule_ProvideSearchSavedFactsUseCaseFactory implements Factory<SearchSavedFactsUseCase> {
  private final Provider<FactRepository> repositoryProvider;

  public DataModule_ProvideSearchSavedFactsUseCaseFactory(
      Provider<FactRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public SearchSavedFactsUseCase get() {
    return provideSearchSavedFactsUseCase(repositoryProvider.get());
  }

  public static DataModule_ProvideSearchSavedFactsUseCaseFactory create(
      Provider<FactRepository> repositoryProvider) {
    return new DataModule_ProvideSearchSavedFactsUseCaseFactory(repositoryProvider);
  }

  public static SearchSavedFactsUseCase provideSearchSavedFactsUseCase(FactRepository repository) {
    return Preconditions.checkNotNullFromProvides(DataModule.INSTANCE.provideSearchSavedFactsUseCase(repository));
  }
}
