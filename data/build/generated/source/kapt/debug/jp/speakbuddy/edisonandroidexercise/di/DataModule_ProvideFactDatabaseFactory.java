// Generated by Dagger (https://dagger.dev).
package jp.speakbuddy.edisonandroidexercise.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import jp.speakbuddy.edisonandroidexercise.data.local.FactDatabase;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class DataModule_ProvideFactDatabaseFactory implements Factory<FactDatabase> {
  private final Provider<Context> contextProvider;

  public DataModule_ProvideFactDatabaseFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public FactDatabase get() {
    return provideFactDatabase(contextProvider.get());
  }

  public static DataModule_ProvideFactDatabaseFactory create(Provider<Context> contextProvider) {
    return new DataModule_ProvideFactDatabaseFactory(contextProvider);
  }

  public static FactDatabase provideFactDatabase(Context context) {
    return Preconditions.checkNotNullFromProvides(DataModule.INSTANCE.provideFactDatabase(context));
  }
}
