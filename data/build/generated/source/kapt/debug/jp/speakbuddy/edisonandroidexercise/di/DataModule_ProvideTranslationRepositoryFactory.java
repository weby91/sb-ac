// Generated by Dagger (https://dagger.dev).
package jp.speakbuddy.edisonandroidexercise.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import jp.speakbuddy.edisonandroidexercise.data.remote.TranslationApi;
import jp.speakbuddy.edisonandroidexercise.repository.repository.TranslationRepository;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class DataModule_ProvideTranslationRepositoryFactory implements Factory<TranslationRepository> {
  private final Provider<TranslationApi> apiProvider;

  public DataModule_ProvideTranslationRepositoryFactory(Provider<TranslationApi> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public TranslationRepository get() {
    return provideTranslationRepository(apiProvider.get());
  }

  public static DataModule_ProvideTranslationRepositoryFactory create(
      Provider<TranslationApi> apiProvider) {
    return new DataModule_ProvideTranslationRepositoryFactory(apiProvider);
  }

  public static TranslationRepository provideTranslationRepository(TranslationApi api) {
    return Preconditions.checkNotNullFromProvides(DataModule.INSTANCE.provideTranslationRepository(api));
  }
}
