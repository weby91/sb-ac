name: Android CI/CD

on:
  push:
    branches:
      - "main"
      - "development"
  pull_request:
    branches:
      - "main"
      - "development"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Lint
        run: ./gradlew lint

      - name: Run Unit Tests with Coverage
        run: ./gradlew testDebugUnitTest jacocoTestReport

      - name: Upload Lint Results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: lint-results
          path: app/build/reports/lint-results-debug.html

      - name: Upload Unit Test Results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: unit-test-results
          path: app/build/reports/tests/testDebugUnitTest/

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: app/build/reports/jacoco/jacocoTestReport/html/

      - name: Check Coverage for FactViewModel
        run: |
          COVERAGE=$(grep -A 4 "jp/speakbuddy/edisonandroidexercise/presentation/fact/FactViewModel" app/build/reports/jacoco/jacocoTestReport/html/index.html | grep -oP '(?<=<td class="ctr2">)[^<]*' | head -n 1)
          echo "Coverage for FactViewModel: $COVERAGE"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Coverage is below 80%. Failing the build."
            exit 1
          fi

      - name: Build Release APK
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development')
        run: ./gradlew assembleRelease

      - name: Upload APK
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development')
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release-unsigned.apk

      - name: Upload to Firebase App Distribution
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development')
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: testers
          file: app/build/outputs/apk/release/app-release-unsigned.apk

      - name: Build all modules
        run: ./gradlew assembleDebug

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck